/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    implementation 'com.google.guava:guava:29.0-jre'

    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.30.Final'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'
    compile group: 'com.github.javafaker', name: 'javafaker', version: '0.15'
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.20'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
}

application {
    // Define the main class for the application.
    mainClass = 'edu.it.Init'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "edu.it.App"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}